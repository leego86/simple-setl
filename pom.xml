<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.lppz</groupId>
	<artifactId>lppz-etl</artifactId>
	<packaging>jar</packaging>
	<name>lppz-etl</name>
	<version>1.0.0</version>
	
	<properties>
		<lppz_kernel_version>3.6.4-SNAPSHOT</lppz_kernel_version>
		<tomcat_embed_version>7.0.70</tomcat_embed_version>
		<junit_version>4.10</junit_version>
		<otter_version>4.2.15-SNAPSHOT</otter_version>
		<druid_version>1.0.25</druid_version>
		<de_version>6.8.4</de_version>
		<jetty_version>8.1.7.v20120910</jetty_version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>com.lppz</groupId>
			<artifactId>kernel-dubbo-common</artifactId>
			<exclusions>
				<exclusion>
					<artifactId>cxf-rt-transports-http</artifactId>
					<groupId>org.apache.cxf</groupId>
				</exclusion>
				<exclusion>
					<artifactId>cxf-rt-core</artifactId>
					<groupId>org.apache.cxf</groupId>
				</exclusion>
				<exclusion>
					<artifactId>cxf-rt-ws-policy</artifactId>
					<groupId>org.apache.cxf</groupId>
				</exclusion>
				<exclusion>
					<artifactId>cxf-rt-frontend-jaxws</artifactId>
					<groupId>org.apache.cxf</groupId>
				</exclusion>
				<exclusion>
					<artifactId>cxf-rt-frontend-simple</artifactId>
					<groupId>org.apache.cxf</groupId>
				</exclusion>
				<exclusion>
					<artifactId>cxf-rt-databinding-jaxb</artifactId>
					<groupId>org.apache.cxf</groupId>
				</exclusion>
				<exclusion>
					<artifactId>cxf-rt-bindings-soap</artifactId>
					<groupId>org.apache.cxf</groupId>
				</exclusion>
				<exclusion>
					<artifactId>cxf-rt-ws-addr</artifactId>
					<groupId>org.apache.cxf</groupId>
				</exclusion>
				<exclusion>
					<artifactId>cxf-api</artifactId>
					<groupId>org.apache.cxf</groupId>
				</exclusion>
				<exclusion>
					<artifactId>cxf-rt-bindings-xml</artifactId>
					<groupId>org.apache.cxf</groupId>
				</exclusion>
				<exclusion>
					<artifactId>kernel-lppz-hbase</artifactId>
					<groupId>com.lppz</groupId>
				</exclusion>
				<exclusion>
					<artifactId>kernel-lppz-search</artifactId>
					<groupId>com.lppz</groupId>
				</exclusion>
				<exclusion>
					<groupId>org.slf4j</groupId>
					<artifactId>slf4j-log4j12</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.wltea</groupId>
					<artifactId>IKAnalyzer</artifactId>
				</exclusion>
			</exclusions>
			<version>${lppz_kernel_version}</version>
		</dependency>
		<dependency>
			<groupId>com.lppz</groupId>
			<artifactId>kernel-lppz-hbase</artifactId>
			<version>${lppz_kernel_version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache</groupId>
			<artifactId>tomcat-embed-core</artifactId>
			<version>${tomcat_embed_version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>shared.push</artifactId>
			<version>${otter_version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-tx</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-jdbc</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-test</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aop</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context-support</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>shared.arbitrate</artifactId>
			<version>${otter_version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>shared.etl</artifactId>
			<version>${otter_version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>node.common</artifactId>
			<version>${otter_version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-core</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-tx</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-jdbc</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-test</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-beans</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-aop</artifactId>
				</exclusion>
				<exclusion>
					<groupId>org.springframework</groupId>
					<artifactId>spring-context-support</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>com.alibaba.otter</groupId>
			<artifactId>node.canal</artifactId>
			<version>${otter_version}</version>
		</dependency>
		<dependency>
			<groupId>com.alibaba</groupId>
			<artifactId>druid</artifactId>
			<version>${druid_version}</version>
		</dependency>
		<dependency>
			<groupId>de.schlichtherle</groupId>
			<artifactId>truezip</artifactId>
			<version>${de_version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
    		<version>${jetty_version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-xml</artifactId>
    		<version>${jetty_version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache</groupId>
			<artifactId>tomcat-embed-logging-juli</artifactId>
			<version>${tomcat_embed_version}</version>
		</dependency>
		<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit_version}</version>
				<scope>test</scope>
			</dependency>
	</dependencies>
	<build>
		<finalName>lppz-etl</finalName>
		<resources>
		<!-- 先指定 src/main/resources下所有文件及文件夹为资源文件 -->
		<resource>
			<directory>src/main/resources</directory>
			<includes>
				<include>**/*</include>
			</includes>
		</resource>
		<!-- 设置对xxx.properties进行过虑，即这些文件中的${key}会被替换掉为真正的值 -->
		<resource>
			<directory>src/main/resources</directory>
			<includes>
				<include>META-INF/diamond.yaml</include>
			</includes>
			<filtering>true</filtering>
		</resource>
	</resources>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							<addClasspath>true</addClasspath>
							<classpathPrefix>lib/</classpathPrefix>
							<mainClass>com.lppz.init.EtlServiceStartup</mainClass>
						</manifest>
					</archive>
					<!-- 配置文件放到jar外面，方便修改，见assembly.xml，会把这里exclude后的文件放到最终zip包中 -->
					<includes>
						<include>**/*.class</include>
					</includes>
				</configuration>
			</plugin>
			<plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.3</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<!-- 设置生成目录的linux访问权限 -->
					<archiverConfig>
						<fileMode>420</fileMode> <!-- 420(dec) = 644(oct) -->
						<directoryMode>493</directoryMode> <!-- 493(dec) = 755(oct) -->
						<defaultDirectoryMode>493</defaultDirectoryMode>
					</archiverConfig>
					<descriptors>
						<descriptor>src/main/assembly/assembly.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>install</phase>
						<configuration>
							<target>
								<move file="${project.build.directory}/lppz-etl-bin.zip" tofile="${project.build.directory}/lppz-etl.ear" />
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
		<profiles>
		<profile>
			<id>dev</id>
			<!-- 默认激活开发配制，使用config-dev.properties来替换设置过虑的资源文件中的${key} -->
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<filters>
					<filter>src/main/resources/META-INF/env/development.properties</filter>
				</filters>
			</build>
		</profile>
		<profile>
			<id>test</id>
			<build>
				<filters>
					<filter>src/main/resources/META-INF/env/test.properties</filter>
				</filters>
			</build>
		</profile>
		<profile>
			<id>pre</id>
			<build>
				<filters>
					<filter>src/main/resources/META-INF/env/pre-production.properties</filter>
				</filters>
			</build>
		</profile>
		<profile>
			<id>pro</id>
			<build>
				<filters>
					<filter>src/main/resources/META-INF/env/production.properties</filter>
				</filters>
			</build>
		</profile>
	</profiles>
</project>
